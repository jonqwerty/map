{"version":3,"sources":["logo.svg","components/Navbar.jsx","components/CustomMap.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","style","height","width","backgroundColor","textAlign","fontSize","mapStyles","GoogleApiWrapper","apiKey","google","useState","locations","setLocations","locationId","setLocationId","locationInfo","setLocationInfo","locationImage","setLocationImage","useEffect","axios","get","process","then","res","JSON","parse","data","positions","location","find","item","id","info","image","console","log","display","justifyContent","marginTop","zoom","initialCenter","lat","lng","map","loc","position","onClick","src","alt","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAAe,I,gCCaAA,EATA,WAEX,OACI,qBAAKC,MAAO,CAAEC,OAAO,QAASC,MAAM,MAAOC,gBAAiB,OAAQC,UAAW,SAAUC,SAAU,QAAnG,qB,iBCAFC,EAAY,CACfJ,MAAO,QACRD,OAAQ,SAiEMM,6BAAiB,CAChCC,OAAQ,2CADOD,EA5DE,SAAC,GAAc,IAAbE,EAAY,EAAZA,OAEpB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0CN,mBAAS,MAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAyBE,OAlBAC,qBAAU,WACRC,IAAMC,IAAIC,8CACHC,MAAK,SAAAC,GAAG,OAAIZ,EAAaa,KAAKC,MAAMF,EAAIG,KAAKC,iBAEnD,IAGHT,qBAAU,WACR,GAAIN,EAAY,CACd,IAAMgB,EAAWlB,EAAUmB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOnB,KACpDG,EAAgBa,EAASI,MACzBf,EAAiBW,EAASK,UAG3B,CAACrB,IAEJsB,QAAQC,IAAIvB,GAGV,sBAAKb,MAAO,CAACqC,QAAQ,OAAQC,eAAe,gBAAkBC,UAAU,OAAQtC,OAAO,QAAvF,UACE,cAAC,EAAD,IACA,qBAAKD,MAAO,CAACE,MAAO,QAAQD,OAAQ,SAApC,SAEE,cAAC,MAAD,CACEQ,OAAQA,EACR+B,KAAM,GACNxC,MAAOM,EACPmC,cAAe,CAAEC,IAAK,kBAAmBC,IAAK,mBAJhD,SAMChC,EAAUiC,KACP,SAAAC,GAAG,OAAK,cAAC,SAAD,CAAqBC,SAAU,CAAEJ,IAAKG,EAAIH,IAAKC,IAAKE,EAAIF,KAAOI,QAAS,kBAAMjC,EAAc+B,EAAIb,MAAnFa,EAAIb,WAK/B,sBAAKhC,MAAO,CAACE,MAAO,QAASD,OAAQ,SAArC,UACE,mDACA,qBAAKD,MAAO,CAACE,MAAO,QAASD,OAAQ,SAAU+C,IAAK/B,EAAegC,IAAI,KAEvE,sBAAKjD,MAAO,GAAZ,UAAiBe,EAAjB,gBCpDOmC,EATA,WAEX,OACI,qBAAKlD,MAAO,CAACC,OAAQ,QAASC,MAAO,OAAQC,gBAAiB,OAAQC,UAAW,SAAUC,SAAU,QAArG,kCCkBO8C,MAdf,WAEE,OACE,qCACE,cAAC,EAAD,IAGA,cAAC,EAAD,QCNSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdlB,QAAQC,IAAId,8CAEZsC,IAASC,OAEL,cAAC,IAAMC,WAAP,UAEI,cAAC,EAAD,MAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4e2a7506.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React  from 'react'\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <div style={{ height:\"500px\", width:\"6em\", backgroundColor: 'grey', textAlign: \"center\", fontSize: \"40px\"}}>\r\n            Navbar\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect, useState }  from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { locationsData } from '../data/data'\r\nimport Navbar from './Navbar'\r\nimport axios from 'axios'\r\n\r\n\r\nconst mapStyles = {\r\n   width: \"800px\",\r\n  height: \"500px\",\r\n}\r\n\r\n\r\n\r\nconst CustomMap = ({google}) => {\r\n\r\nconst [locations, setLocations] = useState([])\r\nconst [locationId, setLocationId] = useState(null)\r\nconst [locationInfo, setLocationInfo] = useState(null)\r\nconst [locationImage, setLocationImage] = useState(null)\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setLocations(locationsData )\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    axios.get(process.env.REACT_APP_API_URL)\r\n          .then(res => setLocations(JSON.parse(res.data.positions)))\r\n         \r\n  }, [])\r\n  \r\n\r\n  useEffect(() => {\r\n    if (locationId) {\r\n      const location = locations.find(item => item.id === locationId)\r\n      setLocationInfo(location.info )\r\n      setLocationImage(location.image)\r\n    }\r\n    \r\n  }, [locationId])\r\n\r\n  console.log(locationId)\r\n  \r\n  return (\r\n    <div style={{display:\"flex\", justifyContent:'space-between' , marginTop:\"20px\", height:\"100%\"}}>\r\n      <Navbar />\r\n      <div style={{width: \"800px\",height: \"500px\",}}>\r\n\r\n        <Map \r\n          google={google}\r\n          zoom={11}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 50.44055686944465, lng: 30.53022771561217 }}\r\n        >\r\n        {locations.map(\r\n            loc =>  <Marker key={loc.id} position={{ lat: loc.lat, lng: loc.lng }} onClick={() => setLocationId(loc.id)} />\r\n            )}\r\n\r\n        </Map>\r\n      </div>\r\n      <div style={{width: \"300px\", height: \"300px\"}}>\r\n        <div>Info about place</div>\r\n        <img style={{width: \"300px\", height: \"300px\"}} src={locationImage} alt=\"\" />\r\n              \r\n        <div style={{}}>{locationInfo} </div>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n\r\n}\r\n\r\n\r\n export default GoogleApiWrapper({\r\n apiKey: \"AIzaSyBEoYmhsxCFMlPtJaP_4B2SSjRDhtweDf0\",\r\n })(CustomMap);","import React  from 'react'\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div style={{height: \"100px\", width: \"100%\", backgroundColor: 'grey', textAlign: \"center\", fontSize: \"80px\"}}>\r\n            SOME PLACES IN KIEV\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import logo from './logo.svg';\nimport './App.css';\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\"\nimport CustomMap from './components/CustomMap';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\n\n\n\n\nfunction App() {\n\n  return (\n    <>\n      <Header />\n     \n        \n      <CustomMap  />\n     \n      \n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\n\nconsole.log(process.env.REACT_APP_API_URL)\n\nReactDOM.render(\n  \n    <React.StrictMode>\n      \n        <App />\n      \n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}