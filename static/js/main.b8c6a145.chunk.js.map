{"version":3,"sources":["components/Navbar.jsx","components/CustomMap.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","lat","setLat","lng","setLng","info","setInfo","file","setSelectedFile","handleClick","e","a","preventDefault","formData","FormData","match","length","append","axios","post","process","then","res","console","log","setFlag","flag","alert","style","height","width","backgroundColor","textAlign","fontSize","value","type","onChange","target","split","join","name","files","onClick","mapStyles","GoogleApiWrapper","apiKey","API_KEY","google","locations","setLocations","inside","setInside","ref","setRef","useEffect","get","data","positions","handleDrag","inWindow","bounds","map","getBounds","i","contains","maps","LatLng","push","position","choosen","find","item","withoutChoosen","filter","newLocations","display","justifyContent","marginTop","id","className","zoom","initialCenter","onReady","onDragend","onZoomChanged","onTilesloaded","loc","_id","border","margin","src","contentType","imageBase64","alt","padding","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c6a145.chunk.js","sourcesContent":["import React, { useState }  from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const [lat, setLat] = useState('')\r\n    const [lng, setLng] = useState('')\r\n    const [info, setInfo] = useState('')\r\n    const [file, setSelectedFile] = useState(null)\r\n\r\n    const handleLat = (e) => {\r\n        setLat(e.target.value.split(' ').join(''))\r\n    }\r\n\r\n    const handleLng = (e) => {\r\n        setLng(e.target.value.split(' ').join('') )\r\n    }\r\n\r\n    const handleInfo = (e) => {\r\n        setInfo(e.target.value)\r\n    }\r\n\r\n\r\n    const handleClick =  async (e) => {\r\n        e.preventDefault()\r\n        \r\n        const formData = new FormData()\r\n\r\n        if (lat.match(/^[0-9]+[.]?[0-9]+$/) && lng.match(/^[0-9]+[.]?[0-9]+$/) && info.length && file) {\r\n            formData.append('lat', lat)\r\n            formData.append('lng', lng)\r\n            formData.append('info', info)\r\n            formData.append('image', file)\r\n    \r\n            // for (var key of formData.entries()) {\r\n            //     console.log(key[0] + ', ' + key[1])\r\n            // }\r\n            await  axios.post(process.env.REACT_APP_API_URL, formData)\r\n                .then(res => console.log(res))\r\n            setLat('')\r\n                     setLng('')\r\n                     setInfo('')\r\n                     setSelectedFile(null)\r\n                    props.setFlag(!props.flag) \r\n\r\n        } else {\r\n                alert('Coordinates must be numeric with \".\", and all fields must be filling')\r\n            }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ height:\"500px\", width:\"6em\", backgroundColor: 'grey', textAlign: \"center\", fontSize: \"40px\"}}>\r\n            \r\n            <form >\r\n                    \r\n                    <label >\r\n                    Широта:\r\n                    <input\r\n                        value={lat}\r\n                        type=\"text\" \r\n                        onChange={handleLat}\r\n                       />\r\n                    </label >\r\n                   \r\n                    <label >\r\n                    Довгота:\r\n                    <input\r\n                        value={lng}\r\n                        type=\"text\" \r\n                        onChange={handleLng}\r\n                       />\r\n                    </label >\r\n                    <label >\r\n                    \r\n                    Інформація:\r\n                    <input\r\n                        value={info}\r\n                        type=\"text\" \r\n                        onChange={handleInfo}\r\n                       />\r\n                    </label >\r\n                    <label>\r\n                    Завантажити фото: \r\n                    <input\r\n                        name=\"image\"\r\n                        type=\"file\" \r\n                        onChange={(e) => setSelectedFile(e.target.files[0])}\r\n                       />\r\n                    </label >\r\n\r\n                    <button onClick={handleClick  }>Здати в оренду</button>  \r\n                   \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect, useState }  from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport Navbar from './Navbar'\r\nimport axios from 'axios'\r\n\r\n\r\nconst mapStyles = {\r\n   width: \"800px\",\r\n  height: \"500px\",\r\n}\r\n\r\n\r\nconst CustomMap = ({google}) => {\r\n\r\n  const [flag, setFlag] = useState(false)\r\n  const [locations, setLocations] = useState([])\r\n  const [inside, setInside] = useState([])\r\n  const [ref, setRef] = useState('')\r\n\r\n    \r\n    useEffect(async() => {\r\n      console.log('first effect')\r\n      \r\n      await axios.get(process.env.REACT_APP_API_URL)\r\n          .then(res => setLocations(res.data.positions))\r\n          \r\n          \r\n      await axios.get(process.env.REACT_APP_API_URL)\r\n            .then(res =>  setInside(res.data.positions))\r\n\r\n      \r\n              \r\n    }, [])\r\n   \r\n   \r\n    useEffect(async() => {\r\n        await axios.get(process.env.REACT_APP_API_URL)\r\n          .then(res => setLocations(res.data.positions))\r\n          \r\n        await axios.get(process.env.REACT_APP_API_URL)\r\n          .then(res => setInside(res.data.positions))\r\n          \r\n         \r\n    }, [flag])\r\n\r\n       \r\n  \r\n    const handleDrag = (e) => {\r\n        const inWindow = []\r\n        const bounds = ref.map.getBounds()\r\n        console.log(bounds)\r\n        for (var i = 0; i < locations.length; i++) {\r\n          if (bounds.contains(new google.maps.LatLng(locations[i].lat, locations[i].lng))) {\r\n            inWindow.push(locations[i])\r\n          }\r\n        }\r\n        setInside(inWindow)\r\n      //bounds.contains(new google.maps.LatLng(locations.find(item => item.lat =5).lat, locations.find(item => item.id=5).lng))\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n      const lat = e.position.lat\r\n      const choosen = inside.find(item => item.lat === lat)\r\n      const withoutChoosen = inside.filter(item => item.lat !== lat)\r\n      const newLocations = [ choosen, ...withoutChoosen]\r\n      setInside(newLocations)\r\n     }\r\n\r\n\r\n  return (\r\n    <div style={{display:\"flex\", justifyContent:'space-between' , marginTop:\"20px\", height:\"100%\"}}  >\r\n\r\n      <Navbar flag={flag} setFlag={setFlag} />\r\n\r\n      <div style={{width: \"800px\", height: \"500px\"}} >\r\n       \r\n        <Map\r\n          id=\"map\"\r\n          className=\"map\" \r\n          google={google}\r\n          zoom={11}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 50.44055686944465, lng: 30.53022771561217 }}\r\n          ref={map => setRef(map)}\r\n         \r\n          onReady={handleDrag}\r\n\r\n          onDragend={handleDrag}\r\n          onZoomChanged={handleDrag}\r\n          onClick={handleDrag}\r\n          onTilesloaded={handleDrag}\r\n          // onBoundsChange={(e)=>{console.log('onBoundsChange', ref.map.getBounds())}}\r\n          //onMouseover={handleDrag}\r\n          //onIdle={() => console.log('idle')}\r\n          // onClick={(e) => {\r\n          //   console.log('map bounds', ref.map.getBounds())\r\n            //console.log(ref.map.getBounds().contains(new google.maps.LatLng(locations.find(item => item.lat =5).lat, locations.find(item => item.id=5).lng)))    \r\n          // }} \r\n        >\r\n\r\n        { \r\n          locations.map(loc =>  \r\n              <Marker key={loc._id}  position={{ lat: loc.lat, lng: loc.lng }}  \r\n              onClick={handleClick} \r\n              />  \r\n          )     \r\n        }\r\n        </Map>\r\n        \r\n      </div>\r\n      \r\n      <div  style={{width: \"300px\", height: \"600px\" }}  >\r\n        \r\n        {\r\n\r\n          inside.map(loc => \r\n            <div key={loc._id} style={{ backgroundColor:'grey', border: \"solid black 2px\", margin: \"10px\"}}>\r\n              <div style={{   margin: \"10px\"}} >\r\n                 <img style={{ border: \"solid black 2px\",  width: \"255px\", height: \"250px\"}} \r\n                 src={`data:${loc.contentType};base64,${loc.imageBase64}`} alt=\"image\"  \r\n                 \r\n                 /> \r\n              </div>\r\n              <div style={{padding: \"10px\"}}>{loc.info} </div>\r\n\r\n            </div>\r\n          )\r\n        }\r\n        </div>\r\n       \r\n        \r\n    </div>  \r\n  )\r\n}\r\n\r\n\r\n export default GoogleApiWrapper({\r\n apiKey: process.env.API_KEY,\r\n })(CustomMap);","import React  from 'react'\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div style={{height: \"100px\", width: \"100%\", backgroundColor: 'grey', textAlign: \"center\", fontSize: \"80px\"}}>\r\n            SOME PLACES IN MAP\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import './App.css';\nimport CustomMap from './components/CustomMap';\nimport Header from './components/Header';\n\n\n\n\nfunction App() {\n\n  return (\n    <>\n      <Header />\n             \n      <CustomMap  />\n     \n     </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\n\nconsole.log(process.env.REACT_APP_API_URL)\n\nReactDOM.render(\n  \n    <React.StrictMode>\n      \n        <App />\n      \n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}